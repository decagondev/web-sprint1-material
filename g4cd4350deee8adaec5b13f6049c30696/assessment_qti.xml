<?xml version="1.0" encoding="UTF-8"?>
<questestinterop xmlns="http://www.imsglobal.org/xsd/ims_qtiasiv1p2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.imsglobal.org/xsd/ims_qtiasiv1p2 http://www.imsglobal.org/profile/cc/ccv1p1/ccv1p1_qtiasiv1p2p1_v1p0.xsd">
  <assessment ident="g4cd4350deee8adaec5b13f6049c30696" title="Functions - Check for Understanding">
    <qtimetadata>
      <qtimetadatafield>
        <fieldlabel>cc_profile</fieldlabel>
        <fieldentry>cc.exam.v0p1</fieldentry>
      </qtimetadatafield>
      <qtimetadatafield>
        <fieldlabel>qmd_assessmenttype</fieldlabel>
        <fieldentry>Examination</fieldentry>
      </qtimetadatafield>
      <qtimetadatafield>
        <fieldlabel>qmd_scoretype</fieldlabel>
        <fieldentry>Percentage</fieldentry>
      </qtimetadatafield>
      <qtimetadatafield>
        <fieldlabel>cc_maxattempts</fieldlabel>
        <fieldentry>unlimited</fieldentry>
      </qtimetadatafield>
    </qtimetadata>
    <section ident="root_section">
      <item ident="gdb9b29280ebcf67370f8ff3e62a5f770" title="CC1 LO1 - 1">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>cc_profile</fieldlabel>
              <fieldentry>cc.multiple_choice.v0p1</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;What is the correct syntax for writing a function in JavaScript with no parameters?&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="8705">
                <material>
                  <mattext texttype="text/html">&lt;pre style="background-image: none;  background-attachment: scroll;   background-color: #ffffff; border: 1px solid #c7cdd1; clear: none; color: #24292e; cursor: auto; direction: ltr; font-style: normal;   font-stretch: normal; font-size: 12px; line-height: 14.4px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px 0px 12px; padding: 9px; text-align: start; text-decoration: none; text-indent: 0px; white-space: pre-wrap; border-collapse: separate; border-spacing: 0px;      background-position: 0% 0%; background-repeat: repeat repeat;" data-hljs-language="javascript"&gt;&lt;code style="background-image: none;  background-attachment: scroll;   background-color: rgba(0, 0, 0, 0); border: 0px none #24292e; font-style: normal;   font-stretch: normal; font-size: 16px; line-height: 19.200001px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px; padding: 0px; background-position: 0% 0%; background-repeat: repeat repeat;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;function&lt;/span&gt; &lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;greet&lt;/span&gt;() {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;console&lt;/span&gt;.&lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;log&lt;/span&gt;(&lt;span style="border: 0px none #032f62; color: #032f62;"&gt;"Hello!"&lt;/span&gt;);&lt;br&gt;&amp;nbsp;&amp;nbsp;} &lt;/code&gt;&lt;/pre&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="8322">
                <material>
                  <mattext texttype="text/html">&lt;pre style="background-image: none;  background-attachment: scroll;   background-color: #ffffff; border: 1px solid #c7cdd1; clear: none; color: #24292e; cursor: auto; direction: ltr; font-style: normal;   font-stretch: normal; font-size: 12px; line-height: 14.4px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px 0px 12px; padding: 9px; text-align: start; text-decoration: none; text-indent: 0px; white-space: pre-wrap; border-collapse: separate; border-spacing: 0px;      background-position: 0% 0%; background-repeat: repeat repeat;" data-hljs-language="javascript"&gt;&lt;code style="background-image: none;  background-attachment: scroll;   background-color: rgba(0, 0, 0, 0); border: 0px none #24292e; font-style: normal;   font-stretch: normal; font-size: 16px; line-height: 19.200001px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px; padding: 0px; background-position: 0% 0%; background-repeat: repeat repeat;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;function&lt;/span&gt; greet {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;console&lt;/span&gt;.&lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;log&lt;/span&gt;(&lt;span style="border: 0px none #032f62; color: #032f62;"&gt;"Hello!"&lt;/span&gt;);&lt;br&gt;&amp;nbsp;&amp;nbsp;} &lt;/code&gt;&lt;/pre&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="6939">
                <material>
                  <mattext texttype="text/html">&lt;pre style="background-image: none;  background-attachment: scroll;   background-color: #ffffff; border: 1px solid #c7cdd1; clear: none; color: #24292e; cursor: auto; direction: ltr; font-style: normal;   font-stretch: normal; font-size: 12px; line-height: 14.4px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px 0px 12px; padding: 9px; text-align: start; text-decoration: none; text-indent: 0px; white-space: pre-wrap; border-collapse: separate; border-spacing: 0px;      background-position: 0% 0%; background-repeat: repeat repeat;" data-hljs-language="javascript"&gt;&lt;code style="background-image: none;  background-attachment: scroll;   background-color: rgba(0, 0, 0, 0); border: 0px none #24292e; font-style: normal;   font-stretch: normal; font-size: 16px; line-height: 19.200001px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px; padding: 0px; background-position: 0% 0%; background-repeat: repeat repeat;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;greet&lt;/span&gt;() {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;console&lt;/span&gt;.&lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;log&lt;/span&gt;(&lt;span style="border: 0px none #032f62; color: #032f62;"&gt;"Hello!"&lt;/span&gt;);&lt;br&gt;&amp;nbsp;&amp;nbsp;} &lt;/code&gt;&lt;/pre&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="3245">
                <material>
                  <mattext texttype="text/html">&lt;pre style="background-image: none;  background-attachment: scroll;   background-color: #ffffff; border: 1px solid #c7cdd1; clear: none; color: #24292e; cursor: auto; direction: ltr; font-style: normal;   font-stretch: normal; font-size: 12px; line-height: 14.4px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px 0px 12px; padding: 9px; text-align: start; text-decoration: none; text-indent: 0px; white-space: pre-wrap; border-collapse: separate; border-spacing: 0px;      background-position: 0% 0%; background-repeat: repeat repeat;" data-hljs-language="javascript"&gt;&lt;code style="background-image: none;  background-attachment: scroll;   background-color: rgba(0, 0, 0, 0); border: 0px none #24292e; font-style: normal;   font-stretch: normal; font-size: 16px; line-height: 19.200001px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px; padding: 0px; background-position: 0% 0%; background-repeat: repeat repeat;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;function&lt;/span&gt; &lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;greet&lt;/span&gt;() { =&amp;gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;console&lt;/span&gt;.&lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;log&lt;/span&gt;(&lt;span style="border: 0px none #032f62; color: #032f62;"&gt;"Hello!"&lt;/span&gt;);&lt;br&gt;&amp;nbsp;&amp;nbsp;} &lt;/code&gt;&lt;/pre&gt;</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">8705</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="8705_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">8322</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="8322_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">6939</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="6939_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">3245</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="3245_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">8705</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="8705_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">Correct! This is the correct syntax for declaring a function in JavaScript with no parameters.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="8322_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">Incorrect. The parentheses are missing from the function declaration, which is required in JavaScript.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="6939_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">Incorrect. This is not a valid syntax for declaring a function in JavaScript.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="3245_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. &lt;code&gt;=&amp;gt;&lt;/code&gt; is not used when making a function declaration.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="g6e24a91d499722521bacd191ad206b8f" title="CC1 LO3 - 1">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>cc_profile</fieldlabel>
              <fieldentry>cc.multiple_choice.v0p1</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;p&gt;What is the difference between a function expression and a function declaration in JavaScript?&lt;/p&gt;
&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="8569">
                <material>
                  <mattext texttype="text/plain">A function expression is stored inside a variable while a function declaration has a name</mattext>
                </material>
              </response_label>
              <response_label ident="1139">
                <material>
                  <mattext texttype="text/plain">A function expression can only be invoked once while a function declaration can be invoked multiple times</mattext>
                </material>
              </response_label>
              <response_label ident="7539">
                <material>
                  <mattext texttype="text/plain">A function expression can only store numbers, strings or Booleans while a function declaration can store all types of data</mattext>
                </material>
              </response_label>
              <response_label ident="5164">
                <material>
                  <mattext texttype="text/plain">Declarations have privacy issues</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">8569</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="8569_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">1139</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="1139_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">7539</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="7539_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">5164</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="5164_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">8569</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="8569_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">Correct! This is the key difference between a function expression and a function declaration in JavaScript.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="1139_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">Incorrect. There is no such restriction on how many times a function expression can be invoked.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="7539_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">Incorrect. A function expression can store any type of data just like a function declaration.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="5164_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">Incorrect. No privacy issues here!</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="g62dc1eb417ea6819db902f00b9032247" title="CC1 LO4 - 2">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>cc_profile</fieldlabel>
              <fieldentry>cc.multiple_choice.v0p1</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;p&gt;In the following code, what will be the value of &lt;code&gt;num&lt;/code&gt;&amp;nbsp;after invoking the increment function?&lt;/p&gt;
&lt;pre style="background-image: none; background-attachment: scroll; background-color: #ffffff; border: 1px solid #c7cdd1; clear: none; color: #24292e; cursor: auto; direction: ltr; font-style: normal; font-stretch: normal; font-size: 12px; line-height: 14.4px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px 0px 12px; padding: 9px; text-align: start; text-decoration: none; text-indent: 0px; white-space: pre-wrap; border-collapse: separate; border-spacing: 0px; background-position: 0% 0%; background-repeat: repeat repeat;" data-hljs-language="javascript"&gt;&lt;code style="background-image: none; background-attachment: scroll; background-color: rgba(0, 0, 0, 0); border: 0px none #24292e; font-style: normal; font-stretch: normal; font-size: 16px; line-height: 19.200001px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px; padding: 0px; background-position: 0% 0%; background-repeat: repeat repeat;"&gt;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;let&lt;/span&gt; num = &lt;span style="border: 0px none #005cc5; color: #005cc5;"&gt;0&lt;/span&gt;;&lt;br&gt;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;function&lt;/span&gt; &lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;increment&lt;/span&gt;() {&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;console&lt;/span&gt;.&lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;log&lt;/span&gt;(num);&lt;br&gt;&amp;nbsp;&amp;nbsp;num++;&lt;br&gt;}&lt;br&gt;&lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;increment&lt;/span&gt;();&lt;br&gt;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;console&lt;/span&gt;.&lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;log&lt;/span&gt;(num);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="6176">
                <material>
                  <mattext texttype="text/plain">0</mattext>
                </material>
              </response_label>
              <response_label ident="4177">
                <material>
                  <mattext texttype="text/plain">1</mattext>
                </material>
              </response_label>
              <response_label ident="9951">
                <material>
                  <mattext texttype="text/plain">2</mattext>
                </material>
              </response_label>
              <response_label ident="379">
                <material>
                  <mattext texttype="text/plain">undefined</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">6176</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="6176_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">4177</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="4177_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">9951</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="9951_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">379</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="379_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">4177</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="6176_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. The first call to &lt;code&gt;console.log(num)&lt;/code&gt; inside the &lt;code&gt;increment&lt;/code&gt; function will log &lt;code&gt;0&lt;/code&gt;, but &lt;code&gt;num&lt;/code&gt; will be incremented to &lt;code&gt;1&lt;/code&gt; afterwards.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="4177_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Correct! The &lt;code&gt;increment&lt;/code&gt; function increments the value of &lt;code&gt;num&lt;/code&gt; from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="9951_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. The value of &lt;code&gt;num&lt;/code&gt; is only incremented once by the &lt;code&gt;increment&lt;/code&gt; function.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="379_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. &lt;code&gt;num&lt;/code&gt; is a variable declared and initialized with a value of &lt;code&gt;0&lt;/code&gt;.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="g4b478c88516a42d760d8347e778c2b76" title="CC2 LO1 - 1">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>cc_profile</fieldlabel>
              <fieldentry>cc.multiple_choice.v0p1</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;p&gt;What is the result of the following code?&lt;/p&gt;
&lt;pre style="background-image: none;  background-attachment: scroll;   background-color: #ffffff; border: 1px solid #c7cdd1; clear: none; color: #24292e; cursor: auto; direction: ltr; font-style: normal;   font-stretch: normal; font-size: 12px; line-height: 14.4px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px 0px 12px; padding: 9px; text-align: start; text-decoration: none; text-indent: 0px; white-space: pre-wrap; border-collapse: separate; border-spacing: 0px;      background-position: 0% 0%; background-repeat: repeat repeat;" data-hljs-language="javascript"&gt;&lt;code style="background-image: none;  background-attachment: scroll;   background-color: rgba(0, 0, 0, 0); border: 0px none #24292e; font-style: normal;   font-stretch: normal; font-size: 16px; line-height: 19.200001px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px; padding: 0px; background-position: 0% 0%; background-repeat: repeat repeat;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;function&lt;/span&gt; &lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;add&lt;/span&gt;(&lt;span&gt;a, b&lt;/span&gt;) {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;return&lt;/span&gt; a + b;&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;const&lt;/span&gt; result = &lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;add&lt;/span&gt;(&lt;span style="border: 0px none #005cc5; color: #005cc5;"&gt;5&lt;/span&gt;, &lt;span style="border: 0px none #005cc5; color: #005cc5;"&gt;10&lt;/span&gt;);&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;console&lt;/span&gt;.&lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;log&lt;/span&gt;(result); &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="5928">
                <material>
                  <mattext texttype="text/plain">15</mattext>
                </material>
              </response_label>
              <response_label ident="2895">
                <material>
                  <mattext texttype="text/plain">undefined</mattext>
                </material>
              </response_label>
              <response_label ident="9270">
                <material>
                  <mattext texttype="text/plain">5</mattext>
                </material>
              </response_label>
              <response_label ident="2801">
                <material>
                  <mattext texttype="text/plain">10</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">5928</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="5928_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">2895</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="2895_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">9270</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="9270_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">2801</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="2801_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">5928</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="5928_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Correct! The code defines a function &lt;code&gt;add&lt;/code&gt; that takes two arguments, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, and returns their sum. The result of the function call &lt;code&gt;add(5, 10)&lt;/code&gt; is then assigned to the &lt;code&gt;result&lt;/code&gt; variable and logged to the console, which will output 15.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="2895_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. The function &lt;code&gt;add&lt;/code&gt; returns the sum of its arguments, so the result of the function call &lt;code&gt;add(5, 10)&lt;/code&gt; is 15, not undefined.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="9270_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. 5 is one of the arguments passed to the function &lt;code&gt;add&lt;/code&gt;, but it is not the result of the function call &lt;code&gt;add(5, 10)&lt;/code&gt;. The result of the function call is 15.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="2801_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. 10 is one of the arguments passed to the function &lt;code&gt;add&lt;/code&gt;, but it is not the result of the function call &lt;code&gt;add(5, 10)&lt;/code&gt;. The result of the function call is 15.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="gfb5b5735cbf81b4c2b1c0dfcc253a167" title="CC3 LO1 - 1">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>cc_profile</fieldlabel>
              <fieldentry>cc.multiple_choice.v0p1</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;p&gt;What is the value of the variable &lt;code&gt;message1&lt;/code&gt; after the following code executes?&lt;/p&gt;
&lt;pre style="background-image: none;  background-attachment: scroll;   background-color: #ffffff; border: 1px solid #c7cdd1; clear: none; color: #24292e; cursor: auto; direction: ltr; font-style: normal;   font-stretch: normal; font-size: 12px; line-height: 14.4px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px 0px 12px; padding: 9px; text-align: start; text-decoration: none; text-indent: 0px; white-space: pre-wrap; border-collapse: separate; border-spacing: 0px;      background-position: 0% 0%; background-repeat: repeat repeat;" data-hljs-language="javascript"&gt;&lt;code style="background-image: none;  background-attachment: scroll;   background-color: rgba(0, 0, 0, 0); border: 0px none #24292e; font-style: normal;   font-stretch: normal; font-size: 16px; line-height: 19.200001px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px; padding: 0px; background-position: 0% 0%; background-repeat: repeat repeat;"&gt;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;function&lt;/span&gt; &lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;greet&lt;/span&gt;(&lt;span&gt;name&lt;/span&gt;) {&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;return&lt;/span&gt; &lt;span style="border: 0px none #032f62; color: #032f62;"&gt;"Hello, "&lt;/span&gt; + name;&lt;br&gt;}&lt;br&gt;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;const&lt;/span&gt; message1 = &lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;greet&lt;/span&gt;(&lt;span style="border: 0px none #032f62; color: #032f62;"&gt;"Brian"&lt;/span&gt;);&lt;br&gt;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;console&lt;/span&gt;.&lt;span style="border: 0px none #6f42c1; color: #6f42c1;"&gt;log&lt;/span&gt;(message1);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="691">
                <material>
                  <mattext texttype="text/html">"Hello, Brian"</mattext>
                </material>
              </response_label>
              <response_label ident="7175">
                <material>
                  <mattext texttype="text/html">"Hello, + name"</mattext>
                </material>
              </response_label>
              <response_label ident="3160">
                <material>
                  <mattext texttype="text/html">"Hello, Brian + name"</mattext>
                </material>
              </response_label>
              <response_label ident="2628">
                <material>
                  <mattext texttype="text/html">"Hello, "</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">691</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="691_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">7175</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="7175_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">3160</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="3160_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">2628</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="2628_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">691</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="691_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Correct! The &lt;code&gt;greet&lt;/code&gt; function returns the string &lt;code&gt;"Hello, "&lt;/code&gt; concatenated with the input parameter &lt;code&gt;name&lt;/code&gt;. When &lt;code&gt;greet&lt;/code&gt; is invoked with the argument &lt;code&gt;"Brian"&lt;/code&gt;, the value of &lt;code&gt;message1&lt;/code&gt; is &lt;code&gt;"Hello, Brian"&lt;/code&gt;.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="7175_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. The &lt;code&gt;greet&lt;/code&gt; function returns the string &lt;code&gt;"Hello, "&lt;/code&gt; concatenated with the input parameter &lt;code&gt;name&lt;/code&gt;, not the string &lt;code&gt;"Hello, + name"&lt;/code&gt;.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="3160_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. The &lt;code&gt;greet&lt;/code&gt; function returns the string &lt;code&gt;"Hello, "&lt;/code&gt; concatenated with the input parameter &lt;code&gt;name&lt;/code&gt;, not the string &lt;code&gt;"Hello, Brian + name"&lt;/code&gt;.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="2628_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. The &lt;code&gt;greet&lt;/code&gt; function returns the string &lt;code&gt;"Hello, "&lt;/code&gt; concatenated with the input parameter &lt;code&gt;name&lt;/code&gt;, not just the string &lt;code&gt;"Hello, "&lt;/code&gt; by itself.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="ge22a23d1ecacac101df64cd8e6d50a8a" title="CC4 LO1 - 1">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>cc_profile</fieldlabel>
              <fieldentry>cc.multiple_choice.v0p1</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;p&gt;What is the result of the following code?&lt;/p&gt;
&lt;pre style="background-image: none; background-attachment: scroll; background-color: #ffffff; border: 1px solid #c7cdd1; clear: none; color: #24292e; cursor: auto; direction: ltr; font-style: normal; font-stretch: normal; font-size: 12px; line-height: 14.4px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px 0px 12px; padding: 9px; text-align: start; text-decoration: none; text-indent: 0px; white-space: pre-wrap; border-collapse: separate; border-spacing: 0px; background-position: 0% 0%; background-repeat: repeat repeat;" data-hljs-language="javascript"&gt;&lt;code style="background-image: none; background-attachment: scroll; background-color: rgba(0, 0, 0, 0); border: 0px none #24292e; font-style: normal; font-stretch: normal; font-size: 16px; line-height: 19.200001px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px; padding: 0px; background-position: 0% 0%; background-repeat: repeat repeat;"&gt;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;let&lt;/span&gt; greet = &lt;span style="border: 0px none #032f62; color: #032f62;"&gt;"Hello"&lt;/span&gt;;&lt;br&gt;greet.&lt;span&gt;length&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="3397">
                <material>
                  <mattext texttype="text/plain">5</mattext>
                </material>
              </response_label>
              <response_label ident="554">
                <material>
                  <mattext texttype="text/plain">Hello</mattext>
                </material>
              </response_label>
              <response_label ident="825">
                <material>
                  <mattext texttype="text/plain">undefined</mattext>
                </material>
              </response_label>
              <response_label ident="8066">
                <material>
                  <mattext texttype="text/plain">null</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">3397</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="3397_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">554</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="554_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">825</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="825_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">8066</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="8066_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">3397</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="3397_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Correct! The &lt;code&gt;.length&lt;/code&gt; property of a string returns the number of characters in the string, so &lt;code&gt;"Hello".length&lt;/code&gt; would evaluate to &lt;code&gt;5&lt;/code&gt;.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="554_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. The &lt;code&gt;.length&lt;/code&gt; property returns the number of characters in the string, not the string itself.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="825_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. The &lt;code&gt;.length&lt;/code&gt; property is a valid property of a string and will return the number of characters in the string.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="8066_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Incorrect. The &lt;code&gt;.length&lt;/code&gt; property is a valid property of a string and will return the number of characters in the string.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="g14f9fd0e47d783a976c59112b8efc974" title="CC4 LO2 - 1">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>cc_profile</fieldlabel>
              <fieldentry>cc.multiple_choice.v0p1</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;p&gt;What is the value of the variable &lt;code&gt;message&lt;/code&gt; after this code executes?&lt;/p&gt;
&lt;pre style="background-image: none; background-attachment: scroll; background-color: #ffffff; border: 1px solid #c7cdd1; clear: none; color: #24292e; cursor: auto; direction: ltr; font-style: normal; font-stretch: normal; font-size: 12px; line-height: 14.4px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px 0px 12px; padding: 9px; text-align: start; text-decoration: none; text-indent: 0px; white-space: pre-wrap; border-collapse: separate; border-spacing: 0px; background-position: 0% 0%; background-repeat: repeat repeat;" data-hljs-language="javascript"&gt;&lt;code style="background-image: none; background-attachment: scroll; background-color: rgba(0, 0, 0, 0); border: 0px none #24292e; font-style: normal; font-stretch: normal; font-size: 16px; line-height: 19.200001px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; margin: 0px; padding: 0px; background-position: 0% 0%; background-repeat: repeat repeat;"&gt;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;let&lt;/span&gt; points = &lt;span style="border: 0px none #005cc5; color: #005cc5;"&gt;12&lt;/span&gt;;&lt;br&gt;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;let&lt;/span&gt; name = &lt;span style="border: 0px none #032f62; color: #032f62;"&gt;"Gabe"&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span style="border: 0px none #d73a49; color: #d73a49;"&gt;let&lt;/span&gt; message = &lt;span style="border: 0px none #032f62; color: #032f62;"&gt;`Nice job, &lt;span style="border: 0px none #24292e; color: #24292e;"&gt;${name}&lt;/span&gt;. You scored &lt;span style="border: 0px none #24292e; color: #24292e;"&gt;${points}&lt;/span&gt; points!`&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="2264">
                <material>
                  <mattext texttype="text/plain">Nice job, Gabe. You scored 12 points!</mattext>
                </material>
              </response_label>
              <response_label ident="8008">
                <material>
                  <mattext texttype="text/html">Nice job, &lt;code&gt;${name}&lt;/code&gt;. You scored &lt;code&gt;${points}&lt;/code&gt; points!</mattext>
                </material>
              </response_label>
              <response_label ident="34">
                <material>
                  <mattext texttype="text/plain">Nice job, 12. You scored Gabe points!</mattext>
                </material>
              </response_label>
              <response_label ident="840">
                <material>
                  <mattext texttype="text/plain">Nice job, Gabe. You scored points!</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">2264</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="2264_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">8008</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="8008_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">34</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="34_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">840</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="840_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">2264</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="2264_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">Correct! The template literal uses the values of &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;points&lt;/code&gt; to construct the final string.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="8008_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">Incorrect. This is the syntax used to embed expressions in a template literal, not the final result.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="34_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">Incorrect. This is not the result of the code.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="840_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">Incorrect. This is not the result of the code.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
    </section>
  </assessment>
</questestinterop>
